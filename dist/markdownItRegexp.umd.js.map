{"version":3,"file":"markdownItRegexp.umd.js","sources":["../lib/utils.js","../lib/index.js"],"sourcesContent":["/*!\n * markdown-it-regexp\n * Copyright (c) 2014 Alex Kocharin\n * MIT Licensed\n */\n\n/**\n * Escape special characters in the given string of html.\n *\n * Borrowed from escape-html component, MIT-licensed\n */\nexport default function escape(html) {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n}\n\n","/*!\n * markdown-it-regexp\n * Copyright (c) 2014 Alex Kocharin\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nimport escape from './utils';\n\n/**\n * Counter for multi usage.\n */\nlet counter = 0;\nlet registered_ids = [];\n\nfunction cloneRegExp(regexp) {\n    // clone regexp with all the flags\n  let flags = (regexp.global     ? 'g' : '')\n            + (regexp.multiline  ? 'm' : '')\n            + (regexp.ignoreCase ? 'i' : '')\n            + (regexp.unicode    ? 'u' : '')\n            + (regexp.sticky     ? 'y' : '');\n\n  regexp = RegExp('^' + regexp.source, flags);\n  return regexp;\n}\n\n/**\n * Constructor function\n */\nlet createPlugin = function createPluginF(regexp, config) {\n  regexp = cloneRegExp(regexp);\n\n  config = Object.assign({\n    setup: (setup, config) => config,\n    shouldParse: (state, match) => true,\n    postprocessParse: (state, token) => {},\n\n    escape,\n    regexp\n  }, typeof config === 'function' ? { replacer: config } : config);\n  if (typeof config.replacer !== 'function') {\n    throw new Error('createPlugin(re, config): config.replacer MUST be a replacer function.');\n  }\n  if (typeof config.shouldParse !== 'function') {\n    throw new Error('createPlugin(re, config): config.shouldParse MUST be a function.');\n  }\n  if (typeof config.postprocessParse !== 'function') {\n    throw new Error('createPlugin(re, config): config.postprocessParse MUST be a function.');\n  }\n  if (typeof config.setup !== 'function') {\n    throw new Error('createPlugin(re, config): config.setup MUST be a function.');\n  }\n\n  // this plugin can be inserted multiple times,\n  // so we're generating unique name for it\n  let id = config.pluginId;\n  if (id && registered_ids['p-' + id]) {\n    throw new Error(`Plugin ID '${id}' has already been registered by another plugin or this plugin is registered multiple times.`);\n  }\n  if (!id) {\n    id = 'regexp-' + counter;\n    while (registered_ids['p-' + id]) {\n      counter++;\n      id = 'regexp-' + counter;\n    }\n    config.pluginId = id;\n  }\n  registered_ids['p-' + id] = true;\n\n  // closure var\n  let plugin_options;\n\n  // return value should be a callable function\n  // with strictly defined options passed by markdown-it\n  let handler = function cbHandler(md, options) {\n    // store use(..., options) in closure\n    plugin_options = config.setup(config, options);\n\n    // register plugin with markdown-it\n    let id = config.pluginId;\n    md.inline.ruler.push(id, parse);\n\n    md.renderer.rules[id] = render;\n  };\n\n  function parse(state, silent) {\n    // slowwww... maybe use an advanced regexp engine for this\n    let match = config.regexp.exec(state.src.slice(state.pos));\n    if (!match) return false;\n\n    if (!config.shouldParse(state, match, config, plugin_options)) {\n      return false;\n    }\n\n    if (state.pending) {\n      state.pushPending();\n    }\n\n    // valid match found, now we need to advance cursor\n    let originalPos = state.pos;\n    state.pos += match[0].length;\n\n    // don't insert any tokens in silent mode\n    if (silent) return true;\n\n    let token = state.push(id, '', 0);\n    token.meta = { match: match };\n    token.position = originalPos;\n    token.size = match[0].length;\n\n    config.postprocessParse(state, token, config, plugin_options);\n\n    return true;\n  }\n\n  function render(tokens, id, options, env) {\n    return config.replacer(tokens[id].meta.match, config, plugin_options, env, tokens, id, options);\n  }\n\n  return handler;\n};\n\ncreatePlugin.reset = function () {\n  counter = 0;\n  registered_ids = [];\n};\n\n\n/**\n * Expose `Plugin`\n */\n\nexport default createPlugin;\n\n"],"names":["escape","html","String","replace","counter","registered_ids","cloneRegExp","regexp","flags","global","multiline","ignoreCase","unicode","sticky","RegExp","source","createPlugin","createPluginF","config","Object","assign","setup","shouldParse","state","match","postprocessParse","token","replacer","Error","id","pluginId","plugin_options","handler","cbHandler","md","options","inline","ruler","push","parse","renderer","rules","render","silent","exec","src","slice","pos","pending","pushPending","originalPos","length","meta","position","size","tokens","env","reset"],"mappings":"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"}