{"version":3,"file":"markdownItRegexp.js","sources":["../lib/utils.js","../lib/index.js"],"sourcesContent":["/*!\n * markdown-it-regexp\n * Copyright (c) 2014 Alex Kocharin\n * MIT Licensed\n */\n\n/**\n * Escape special characters in the given string of html.\n *\n * Borrowed from escape-html component, MIT-licensed\n */\nexport default function escape(html) {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n}\n\n","/*!\n * markdown-it-regexp\n * Copyright (c) 2014 Alex Kocharin\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nimport escape from './utils';\n\n/**\n * Counter for multi usage.\n */\nlet counter = 0;\nlet registered_ids = [];\n\n/**\n * Constructor function\n */\nlet createPlugin = function createPluginF(regexp, config) {\n  // clone regexp with all the flags\n  let flags = (regexp.global     ? 'g' : '')\n            + (regexp.multiline  ? 'm' : '')\n            + (regexp.ignoreCase ? 'i' : '')\n            + (regexp.unicode    ? 'u' : '')\n            + (regexp.sticky     ? 'y' : '');\n\n  regexp = RegExp('^' + regexp.source, flags);\n\n  config = Object.assign({\n    setup: (setup, config) => config,\n    shouldParse: (state, match) => true,\n    postprocessParse: (state, token) => {},\n\n    escape\n  }, typeof config === 'function' ? { replacer: config } : config);\n  if (typeof config.replacer !== 'function') {\n    throw new Error('createPlugin(re, config): config.replacer MUST be a replacer function.');\n  }\n  if (typeof config.shouldParse !== 'function') {\n    throw new Error('createPlugin(re, config): config.shouldParse MUST be a function.');\n  }\n  if (typeof config.postprocessParse !== 'function') {\n    throw new Error('createPlugin(re, config): config.postprocessParse MUST be a function.');\n  }\n  if (typeof config.setup !== 'function') {\n    throw new Error('createPlugin(re, config): config.setup MUST be a function.');\n  }\n\n  // this plugin can be inserted multiple times,\n  // so we're generating unique name for it\n  let id = config.pluginId;\n  if (id && registered_ids['p-' + id]) {\n    throw new Error(`Plugin ID '${id}' has already been registered by another plugin or this plugin is registered multiple times.`);\n  }\n  if (!id) {\n    id = 'regexp-' + counter;\n    while (registered_ids['p-' + id]) {\n      counter++;\n      id = 'regexp-' + counter;\n    }\n    config.pluginId = id;\n  }\n  registered_ids['p-' + id] = true;\n\n  // closure var\n  let plugin_options;\n\n  // return value should be a callable function\n  // with strictly defined options passed by markdown-it\n  let handler = function cbHandler(md, options) {\n    // store use(..., options) in closure\n    plugin_options = config.setup(config, options);\n\n    // register plugin with markdown-it\n    let id = config.pluginId;\n    md.inline.ruler.push(id, parse);\n\n    md.renderer.rules[id] = render;\n  };\n\n  function parse(state, silent) {\n    // slowwww... maybe use an advanced regexp engine for this\n    let match = regexp.exec(state.src.slice(state.pos));\n    if (!match) return false;\n\n    if (!config.shouldParse(state, match, config, plugin_options)) {\n      return false;\n    }\n\n    if (state.pending) {\n      state.pushPending();\n    }\n\n    // valid match found, now we need to advance cursor\n    let originalPos = state.pos;\n    state.pos += match[0].length;\n\n    // don't insert any tokens in silent mode\n    if (silent) return true;\n\n    let token = state.push(id, '', 0);\n    token.meta = { match: match };\n    token.position = originalPos;\n    token.size = match[0].length;\n\n    config.postprocessParse(state, token, config, plugin_options);\n\n    return true;\n  }\n\n  function render(tokens, id, options, env) {\n    return config.replacer(tokens[id].meta.match, config, plugin_options, env, tokens, id, options);\n  }\n\n  return handler;\n};\n\ncreatePlugin.reset = function () {\n  counter = 0;\n  registered_ids = [];\n};\n\n\n/**\n * Expose `Plugin`\n */\n\nexport default createPlugin;\n\n"],"names":["escape","html","String","replace","counter","registered_ids","createPlugin","createPluginF","regexp","config","flags","global","multiline","ignoreCase","unicode","sticky","RegExp","source","Object","assign","setup","shouldParse","state","match","postprocessParse","token","replacer","Error","id","pluginId","plugin_options","handler","cbHandler","md","options","inline","ruler","push","parse","renderer","rules","render","silent","exec","src","slice","pos","pending","pushPending","originalPos","length","meta","position","size","tokens","env","reset"],"mappings":"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"}